<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- para informar onde ficaram os servlets controller Os problemas se deram 
		aqui -->
	<!-- <context:component-scan base-package="tarefas.controller" /> <context:component-scan 
		base-package="login" /> -->

	<context:component-scan base-package="tarefas" />
	<mvc:annotation-driven />

	<!-- registra no spring o interceptador, para capturar acesso do usuario 
		se quiser executar em alguma ordem a linha de interceptadores e so colocar 
		aqui na sequencia -->
	<mvc:interceptors>
		<bean class="tarefas.login.AutorizadorInterceptor"></bean>
	</mvc:interceptors>

	<!-- para determinar onde encontrar o jsp's de view e seu sufixo .jsp -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- para intercionalizacao de mensagem -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="/WEB-INF/resources/messages"></property>
	</bean>

	<!-- para encontrar as mensagens de validacao <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"> 
		<property name="validationMessageSource" ref="tarefas/validation/ValidationMessages" 
		/> </bean> http://stackoverflow.com/questions/24124799/spring-custom-validation-message -->

	<!-- intercepta mudancas de idioma no cookie -->
	<bean id="localeChangeInterceptor"
		class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
		<property name="paramName" value="lang" />
	</bean>

	<!-- salva no idioma cookie mundaças quando feitas -->
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="defaultLocale" value="en" />
	</bean>

	<!-- mapeamento de interceptadores caso aja troca de idioma -->
	<bean id="handlerMapping"
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="interceptors">
			<ref bean="localeChangeInterceptor" />
		</property>
	</bean>

	<!-- integrando Spring com JPA -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<!-- dataSource já sabe as informações do banco de dados, então persistence 
			não precisa disso -->
		<property name="dataSource" ref="mysqlDataSource" />
		<!-- integrando JPA com Hibernate -->
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
	</bean>

	<!-- recupera o entityManagerFacotory, que foi declarado acima para que 
		o spring possa fazer o controle. Então habilitamos o gerenciador de tranação(TransactionManager) -->
	<!-- gerenciamento da transação pelo spring -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:annotation-driven />

	<!-- cria uma conexao com o banco de dados mysql -->
	<bean id="mysqlDataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost/caelumJavaWeb" />
		<property name="username" value="caelum" />
		<property name="password" value="123" />
	</bean>


</beans>